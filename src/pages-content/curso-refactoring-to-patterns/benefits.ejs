<div class="container">


  <h2 class="text-center title">El valor del curso</h2>

  <p class="text-center text-dark-grey text--summary">
    Los patrones de diseño son una manera formal de describir soluciones exitosas a problemas comunes en el diseño de
    software. Mediante el uso de patrones de diseño, como desarrolladores podemos crear código más flexible, mantenible
    y reutilizable.
  </p>

  <article class="tdd-value">
    <div class="text-center tdd-value__item">
      <img src="/img/benefits-refactoring.svg" class="tdd-value__image" alt="Curso refactoring patrones" />
    </div>

    <aside class="tdd-value__item">
      <h2 class="tdd-value__title">Beneficios al aplicar patrones de diseño</h2>
      <ul class="course-calendar__items">
        <li class="text-dark-grey">
          <p class="text-bold">Ahorrar tiempo o dolores de cabeza</p>
          <p>
            Buscar siempre una nueva solución a los mismos problemas reduce tu eficacia como desarrollador ya que se
            invierte mucho tiempo en el proceso. Con los patrones de diseño podemos aplicar soluciones para problemas
            típicos y recurrentes a la hora de desarrollar una aplicación. Y es que, tenerlos en nuestra caja de
            herramientas nos puede ahorrar muchos dolores de cabeza.
          </p>
        </li>
        <li class="text-dark-grey">
          <p class="text-bold">Disminuyen de los costes de desarrollo</p>
          <p>
            El ahorro de tiempo y la reutilización de código hace que el coste de programación y desarrollo sea mucho
            menor utilizando design patterns.
            Los programadores no tienen por qué volver a diseñar tareas y procesos que ya han realizado múltiples veces,
            con la consecuente optimización del trabajo y los recursos, lo que implica una reducción de los costes de
            desarrollo.
          </p>
        </li>

        <li class="text-dark-grey">
          <p class="text-bold">Incrementan la calidad del código</p>
          <p>
            Los patrones de diseño no solo brindan estandarización al código, sino que también aseguran que el código
            siga buenos principios de programación, como el bajo acoplamiento y la alta cohesión.
          </p>
        </li>

        <li class="text-dark-grey">
          <p class="text-bold">Establece un lenguaje común</p>
          <p>
            Nos dan un lenguaje común que otras personas, que también entienden este “diccionario”, pueden comprender
            sin la necesidad de una explicación detallada. Esto es de gran importancia porque gran parte del proceso de
            desarrollo es entender el código que otros escribieron. Si entiendes los patrones de diseño más comunes,
            será mucho más fácil que entiendas el código y la arquitectura de otros programas que los usan.
          </p>
        </li>

        <li class="text-dark-grey">
          <p class="text-bold">Flexibilidad</p>
          <p>
            Nos dan la flexibilidad de construir sobre ellos. El que exista patrón que seguir no significa que siempre
            se tenga que implementar a la perfección, sin cambios. Estos patrones dan la capacidad de aprovechar las
            características que sirven para nuestro problema específico y agregar nuevas para adaptarlo completamente a
            nuestro problema.
          </p>
        </li>
      </ul>
    </aside>
  </article>

  <div class="button__wrapper">
    <a class="button button--primary" href="#contactForm"
      data-trackevent="contact_us.show_form.course_value">Contactar</a>
  </div>
</div>
